Post ID is: km4x03amoal2yl

----------------------------------------------
Post number is: 239
----------------------------------------------
Post subject is: Technical Tips
----------------------------------------------
Post content is: As you are all digging into React, CSS, and HTML, I'm sure that many of you are learning a lot of new things quickly. How can we help? We're happy to build some customized tutorials around a particular subject that you would like more information on technically, or to provide a widget that you would find useful. We're also available during office hours to help troubleshoot issues, answer questions about architecture or design, and generally help you all make your wireframes a reality - but you need to let us know where you need tech support. If you have a topic that you think we should post a tutorial on, reply to this post with your requests, and we'll make something happen. As a reminder, the front end code that was given to all of you has a lot of examples that you can profitably cut and paste and tweak to make your platform do what you want - it's always easy to start from something that works and adjust it than to start with a blank screen, especially if you are new to React. We are happy to walk through the way that starter code works in office hours as well, if you have specific (or even general) questions. Lecture will stay focused on the "what" \- but that doesn't mean that we're not willing and able to help out with the "how" through piazza, videos, office hours, and appointments. We're here to support you! #pin

----------------------------------------------

----------------------------------------------
Post ID is: klsfftb0aae1zy

----------------------------------------------
Post number is: 191
----------------------------------------------
Post subject is: Backend update log
----------------------------------------------
Post content is: Throughout the semester, as I receive requests to add features to the provided backend (or otherwise need to make adjustments), I'll be recording them as followups to this post so that it's easy to find and you can follow this post to get notifications. That being said - if you think something is missing, feel free to let me know! As of yesterday afternoon, the backend for each team on the class server appear to be fully up and functioning. #pin

----------------------------------------------

----------------------------------------------
Post ID is: kkwufwpoqkt71r

----------------------------------------------
Post number is: 39
----------------------------------------------
Post subject is: TA Office Hours
----------------------------------------------
Post content is: TA Office Hours begin this week!!! In fact, we have one coming up in 10 minutes. Feel free to check the "staff" section of the "Resources" tab in Piazza. Or look here for when and where to attend. Monday 12:30 - 1:30pm - Clara https://buffalo.zoom.us/j/92490529226 Tuesday 1:00 - 2:00pm - Jonathan https://buffalo.zoom.us/j/94815172704?pwd=NDRFclBiR0FjY0ZRdUVJUEZkR1JwZz09 Thursday 11:00 - 12:00pm - Tristan https://buffalo.zoom.us/j/5950912002?pwd=M3o3MnhzaFNSQy9COWJLVnJuNGhXZz09 Friday 11:00 - 12:00pm - Tanisha https://buffalo.zoom.us/j/7149553824?pwd=VmpvZUdTUnpwaXMvKzZRbDAxVTVpQT09 As a Reminder: Prof. Hunt has his office hours Monday, Wednesday, and Thursday 4:00 - 5:00pm https://buffalo.zoom.us/j/93931936222?pwd=aE13N05PdzRlQkQvSUZCVVBqdHZBUT09 #pin

----------------------------------------------

----------------------------------------------
Post ID is: kkmlflk2wn1dp

----------------------------------------------
Post number is: 6
----------------------------------------------
Post subject is: Welcome to CSE 370 - see you this afternoon on ZOOM!
----------------------------------------------
Post content is: Topic: CSE 370 (HCI)  Time: This is a recurring meeting Meet anytime Join Zoom Meeting  https://buffalo.zoom.us/j/96044572564?pwd=RjlvT2YwOHlwc0R0dXpqWWVhMy8xUT09 Meeting ID: 960 4457 2564  Passcode: 980232 #pin

----------------------------------------------

----------------------------------------------
Post ID is: kn4gqznbbud67g

----------------------------------------------
Post number is: 355
----------------------------------------------
Post subject is: [Tutorial] Brief CSS Tutorial/Refresher
----------------------------------------------
Post content is: Hi all! I've created a CSS tutorial video to help with some CSS concepts we find helpful! Check it out and feel free to reply with any questions you may have. https://www.youtube.com/watch?v=rpx76aN4xyM (Apologies for any microphone issues)

----------------------------------------------

----------------------------------------------
Post ID is: kllc5vb51q3682

----------------------------------------------
Post number is: 150
----------------------------------------------
Post subject is: Server deployment is now available!
----------------------------------------------
Post content is: After a couple weeks of work and patient help from CSE IT, your course projects are now being made available on the Stark CSE webserver! Some notes: **Frontend Update Required** ALL TEAMS will need to make a minor change to their GitHub repository. In the file `src/App.jsx`, change the line containing `` to instead read ``. This will allow your app to properly pick up on the webpage URL when you visit your site on the server **Accessing Your Site** \- Your projects are made available at `https://webdev.cse.buffalo.edu/hci//` - for example, the site for team 1 ($gme) is located at `https://webdev.cse.buffalo.edu/hci/gme/`. \- Note that if the URL does not have a `.` in it, the request will be routed to your index.html so the app can display the appropriate page via react-router. However if it does have a `.` in it, it will look for this file in the directory containing the build output of your app - so for example if you place a file named profile.html in your public folder, you could access that via `https://webdev.cse.buffalo.edu/hci//profile.html` \- The backend is deployed to `https://webdev.cse.buffalo.edu/hci//api`. The landing page does not work, however you can still use the API itself and the Swagger API documentation/explorer. These are available at `https://webdev.cse.buffalo.edu/hci//api/api` and `https://webdev.cse.buffalo.edu/hci//api/swagger` respectively. \- The API URL is made available to your application via the `REACT_APP_API_PATH` environment variable. You can see this in action in fetch requests in the provided code, for example in the `loadPosts` function in `src/Component/PostingList.jsx`. By default, this will be set to `http://localhost:3001/api`, and on the server will be overridden to `/hci//api/api`. If you want to use the server API with a local clone of your frontend instead of needing to run the backend (I know some folks had issues with that), you can do so by creating a file named `.env.local` with the contents `REACT_APP_API_PATH=https://webdev.cse.buffalo.edu/hci//api/api` (replacing `` as appropriate). This will override the setting in the `.env` file already committed to your repo, and this file is in your gitignore already so that different developers can have different settings without it being versioned in your repository. For more ifnormation, see https://create-react- app.dev/docs/adding-custom-environment-variables/ **Deployment** \- To update your frontend code on the server, all you need to do is push any changes to the master branch of your repository. The server will then re-download, re- install, and re-build your application. This process will of course take a little bit of time, so I suggest giving it 5 minutes to reflect any changes. \- When any changes are made to the backend, we will take care of re-deploying it for you (and I'll be creating a piazza post to record any updates). I'll do my best to ensure that there aren't any breaking changes or other negative impacts to your apps, but if for some reason this is absolutely necessary (which I doubt), I'll be sure to make this clear. **Questions? Concerns? Problems?** Feel free to get in touch via Piazza, email, or office hours if you have any issues with this process. I've spent a fair amount of time to attempt to make this as stable and as easy as possible for you, but it's always possible that there are bugs or other issues. I'll do my best to get them resolved as fast as I can! #pin

----------------------------------------------

----------------------------------------------
Post ID is: klid0x1q4gq2q0

----------------------------------------------
Post number is: 131
----------------------------------------------
Post subject is: Project Update: Deployment requirements and running the backend
----------------------------------------------
Post content is: Good afternoon everyone! Apologies that I haven't posted this information sooner - I was hoping that we'd have everything completely worked out by now, but I've run into a number of issues getting things set up. That being said, please note the following: **Deployment** You are NOT responsible for deploying your code to the class server this semester. This is a change intended to make your life easier (and to allow for some changes in our setup). I've set up an application that will automatically deploy your frontend code to the server whenever you commit to the master branch of your repository (making it available at `webdev.cse.buffalo.edu/hci//`), and automatically deploy the provided backend code when it is updated as well (available at `webdev.cse.buffalo.edu/hci//api/`, with the API itself at `webdev.cse.buffalo.edu/hci//api/api/`). I'm still struggling to get Apache to play nicely with me (sigh), so this is not quite ready yet. What does this mean? \- Your requirements for sprint 1, as with the rest of the semester, is that your code is pushed to the master branch of your repository and is able to build, with all relevant deliverables. In the case of the team profiles for sprint 1, this means either the profiles should be part of your react app OR the profiles are separate HTML files that are in the public directory of your repository (when your app gets built, everything in that directory gets copied directly to the build output folder). \- Don't worry about the availability of the server this sprint - that's on me, and will not impact your grade. **Backend** There have been a number of individuals who have run into issues installing the backend code. I did not realize that the SQLite library does not ship with prebuilt binaries, so it requires building the C/C++ code when you install it (if I had known this I likely would have gone down a different path). This requires Python >= 3.6, and the following: \- Linux: `make` and a C/C++ toolchain like `gcc` (see https://github.com/nodejs/node-gyp#on-unix) \- MacOS: The XCode Command Line Tools. If you do not have these installed, you can do so by running `xcode-select --install`. If you're still running into issues, you can try reinstalling via `sudo rm -rf $(xcode-select --print-path) && xcode-select --install`. You do NOT need the full XCode IDE. (see https://github.com/nodejs/node-gyp#on-macos) \- Windows: Visual Studio Build Tools with the Visual C++ build tools workload. You do NOT need the full Visual Studio IDE. (see https://github.com/nodejs/node-gyp#on-windows) I am hoping that I'll be able to get the backend for each team on Stark soon so that you'll be able to point your frontend there instead. Thank you all for your patience - I fully appreciate that this is far from ideal. Do feel free to reach out with any further questions or anything that we can assist you with. We hope you can get a lot out of this class and will do the best we can to make the background logistics as stress-free as possible moving forward.

----------------------------------------------

----------------------------------------------
Post ID is: kkzqixswzf81yu

----------------------------------------------
Post number is: 48
----------------------------------------------
Post subject is: Accessing your team project GitHub Repos
----------------------------------------------
Post content is: Your team GitHub Repositories have been created, and access should be granted to all teams that provided their GitHub information! A few things to know: **GitHub repository locations have changed from when they were first mentioned. Make sure you 're using the correct repositories!** **Frontend Repo:** The repository for your frontend code is on GitHub and will be used by your team throughout the semester. You can find your repository in the following organization you have been invited to: https://github.com/orgs/CSE410HCI/ Instructions for starting the frontend starter code is in the README **Backend Repo:** The backend code is located at the following repo: https://github.com/CSE410HCI/hci-social-backend Both the frontend and backend will need to be run. If you have any questions or problems be sure to ask for help! The backend should have everything you need and shouldn't require any editing. #pin

----------------------------------------------

----------------------------------------------
Post ID is: kn52vg0u2kp1hb

----------------------------------------------
Post number is: 372
----------------------------------------------
Post subject is: Does user have to be logged in for us to set a name and a last name parameters for them?
----------------------------------------------
Post content is: So currently we are trying to register a user and upon registration fill out their last and first name. However, to make the api call that will change the user's information we need to pass the Authentication and I guess we are confused how to do that since the user is technically not logged in when they are making an account so we don't have a token to submit

----------------------------------------------

----------------------------------------------
Post ID is: kn50jdx1oak7mr

----------------------------------------------
Post number is: 371
----------------------------------------------
Post subject is: 4/5 Group Activiity - GME
----------------------------------------------
Post content is: CSE370 4/5/2021 In-Class Activities Birthday Section:   * Name and Major are best as a form fill in, as it has data fields the user should be able to recognize and understand.  * Year and Graduation Date could be combined with direct manipulation, specifically a calendar that the user should be able to just click on, filling out both fields at once.  * Level of experience and Areas of Interest should be drop-down menus, as a form of menu selection. This would make it obvious what the form expects and prevents erroneous inputs.  * Technologies Known could remain as a form fill in but combined with checkboxes for the most frequently chosen options to make it easier on the user. The checkboxes will let catch all the typical cases, while the form input would catch any more unique technologies they want to input. Validation: We would need to validate the Name field. As that would be important information and any errors could lead to a significant amount of confusion. Typing in a data field is also more prone to errors compared to drop down menus or calendars shown with other fields. Year and graduation date fields would be a calendar which is less prone to errors. Level of experience and area of interest are drop down menus which are not prone to errors, and also any confusion will not lead to drastic confusion which could potentially break the system. Technologies known are designed to be checkboxes which are also less prone to errors.

----------------------------------------------

----------------------------------------------
